substitutions:
  printer_name: Sapphire Plus
  printer_name_short: sapphire_plus

esphome:
  name: espprint_${printer_name_short}
  platform: ESP32
  board: nodemcu-32s
  arduino_version: latest
  includes: !include include.yaml
  on_boot:
    - lambda: SD_MMC.begin();
    - delay: 4s
    - lambda: get_sender(id(gcode_sender))->reset();
    - lambda: get_sender(id(gcode_sender))->sendGCode("M155 S4");

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${printer_name} Fallback Hotspot"
    password: !secret fallback_password

captive_portal:

# Enable logging
logger:
  baud_rate: 0
  level: INFO

# Enable Home Assistant API
api:
  services:
    - service: send_gcode
      variables:
        gcode: string
      then:
        - lambda: get_sdSender(id(gcode_sender))->sendGCode(gcode);
    - service: print_file
      variables:
        file: string
      then:
        - lambda: get_sdSender(id(gcode_sender))->print(file);
    - service: cancle_print
      then:
        - lambda: get_sdSender(id(gcode_sender))->stop();

ota:

web_server_base:
  id: upload_server_base

uart:
  id: uart_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 115200

packages:
  common: !include config/common.yaml
  debug: !include config/debug.yaml
  camera: !include config/camera.yaml
  lights: !include config/lights.yaml